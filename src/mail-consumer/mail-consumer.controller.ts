import { Controller } from '@nestjs/common';
import { EventPattern, Payload } from '@nestjs/microservices';
import * as nodemailer from 'nodemailer';

@Controller()
export class MailConsumerController {
  @EventPattern('mail.send')
  async handleSendMail(@Payload() payload: { to: string; subject: string; body: string }) {
    console.log('üì© Sending email to:', payload.to);
    console.log('Subject:', payload.subject);
    console.log('Body:', payload.body);

    // C·∫•u h√¨nh Nodemailer
    const transporter = nodemailer.createTransport({
      host: 'smtp.example.com', // Thay b·∫±ng SMTP server b·∫°n s·ª≠ d·ª•ng, v√≠ d·ª•: Gmail, SendGrid
      port: 587, // C·ªïng SMTP (th∆∞·ªùng l√† 587 cho TLS, 465 cho SSL)
      secure: false, // S·ª≠ d·ª•ng TLS
      auth: {
        user: process.env.SMTP_USER, // Th√¥ng tin ƒëƒÉng nh·∫≠p c·ªßa b·∫°n
        pass: process.env.SMTP_PASS, // M·∫≠t kh·∫©u ·ª©ng d·ª•ng ho·∫∑c m·∫≠t kh·∫©u SMTP
      },
    });

    // C·∫•u h√¨nh n·ªôi dung email
    const mailOptions = { 
      from: '"Sender Name" <sender@example.com>', // ƒê·ªãa ch·ªâ email ng∆∞·ªùi g·ª≠i
      to: payload.to, // ƒê·ªãa ch·ªâ ng∆∞·ªùi nh·∫≠n
      subject: payload.subject, // Ti√™u ƒë·ªÅ email
      text: payload.body, // N·ªôi dung email d·∫°ng text
      // html: payload.body, // N·∫øu b·∫°n mu·ªën g·ª≠i d∆∞·ªõi d·∫°ng HTML
    };

    try {
      // G·ª≠i email
      await transporter.sendMail(mailOptions);
      console.log('Email sent successfully!');
    } catch (error) {
      console.error('Error sending email:', error);
    }
  }
}
